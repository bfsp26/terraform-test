2025-02-13T22:10:15.191-0500 [INFO]  Terraform version: 1.10.5
2025-02-13T22:10:15.191-0500 [INFO]  Go runtime version: go1.23.3
2025-02-13T22:10:15.192-0500 [INFO]  CLI args: []string{"terraform", "plan"}
2025-02-13T22:10:15.197-0500 [INFO]  CLI command args: []string{"plan"}
2025-02-13T22:10:16.682-0500 [INFO]  backend/local: starting Plan operation
2025-02-13T22:10:16.683-0500 [INFO]  provider: configuring client automatic mTLS
2025-02-13T22:10:16.783-0500 [INFO]  provider.terraform-provider-aws_v5.84.0_x5: configuring server automatic mTLS: timestamp=2025-02-13T22:10:16.782-0500
2025-02-13T22:10:17.492-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/5.84.0/linux_amd64/terraform-provider-aws_v5.84.0_x5 id=5751
2025-02-13T22:10:17.494-0500 [INFO]  provider: configuring client automatic mTLS
2025-02-13T22:10:17.594-0500 [INFO]  provider.terraform-provider-aws_v5.84.0_x5: configuring server automatic mTLS: timestamp=2025-02-13T22:10:17.594-0500
2025-02-13T22:10:17.669-0500 [ERROR] provider: error encountered while scanning stdout: error="read |0: file already closed"
2025-02-13T22:10:17.669-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/5.84.0/linux_amd64/terraform-provider-aws_v5.84.0_x5 id=5758
2025-02-13T22:10:17.669-0500 [INFO]  backend/local: plan calling Plan
2025-02-13T22:10:17.671-0500 [INFO]  provider: configuring client automatic mTLS
2025-02-13T22:10:17.759-0500 [INFO]  provider.terraform-provider-aws_v5.84.0_x5: configuring server automatic mTLS: timestamp=2025-02-13T22:10:17.759-0500
2025-02-13T22:10:17.815-0500 [INFO]  provider.terraform-provider-aws_v5.84.0_x5: Retrieved credentials: tf_mux_provider="*schema.GRPCProviderServer" tf_rpc=ConfigureProvider tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=6c926838-e1d1-8b6f-5ec5-7779e4b43b87 @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.61/logging/tf_logger.go:39 @module=aws.aws-base tf_aws.credentials_source="SharedConfigCredentials: /home/usrtlbrh/.aws/credentials" timestamp=2025-02-13T22:10:17.814-0500
2025-02-13T22:10:18.245-0500 [INFO]  provider.terraform-provider-aws_v5.84.0_x5: Retrieved caller identity from STS: tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=6c926838-e1d1-8b6f-5ec5-7779e4b43b87 @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.61/logging/tf_logger.go:39 timestamp=2025-02-13T22:10:18.245-0500
2025-02-13T22:10:18.255-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_vpc.vpc_virginia, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .instance_tenancy: planned value cty.StringVal("default") for a non-computed attribute
      - .enable_dns_support: planned value cty.True for a non-computed attribute
2025-02-13T22:10:18.259-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sg_public_instance, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal("SSH over internet"), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal("SSH over internet"), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)})})
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
2025-02-13T22:10:18.259-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_subnet.public_subnet, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .enable_resource_name_dns_aaaa_record_on_launch: planned value cty.False for a non-computed attribute
      - .enable_resource_name_dns_a_record_on_launch: planned value cty.False for a non-computed attribute
      - .enable_dns64: planned value cty.False for a non-computed attribute
      - .ipv6_native: planned value cty.False for a non-computed attribute
      - .assign_ipv6_address_on_creation: planned value cty.False for a non-computed attribute
2025-02-13T22:10:18.263-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_route_table.public_crt, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .route: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"carrier_gateway_id":cty.StringVal(""), "cidr_block":cty.StringVal("0.0.0.0/0"), "core_network_arn":cty.StringVal(""), "destination_prefix_list_id":cty.StringVal(""), "egress_only_gateway_id":cty.StringVal(""), "gateway_id":cty.UnknownVal(cty.String), "ipv6_cidr_block":cty.StringVal(""), "local_gateway_id":cty.StringVal(""), "nat_gateway_id":cty.StringVal(""), "network_interface_id":cty.StringVal(""), "transit_gateway_id":cty.StringVal(""), "vpc_endpoint_id":cty.StringVal(""), "vpc_peering_connection_id":cty.StringVal("")})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"carrier_gateway_id":cty.NullVal(cty.String), "cidr_block":cty.StringVal("0.0.0.0/0"), "core_network_arn":cty.NullVal(cty.String), "destination_prefix_list_id":cty.NullVal(cty.String), "egress_only_gateway_id":cty.NullVal(cty.String), "gateway_id":cty.UnknownVal(cty.String), "ipv6_cidr_block":cty.NullVal(cty.String), "local_gateway_id":cty.NullVal(cty.String), "nat_gateway_id":cty.NullVal(cty.String), "network_interface_id":cty.NullVal(cty.String), "transit_gateway_id":cty.NullVal(cty.String), "vpc_endpoint_id":cty.NullVal(cty.String), "vpc_peering_connection_id":cty.NullVal(cty.String)})})
2025-02-13T22:10:18.265-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_subnet.private_subnet, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ipv6_native: planned value cty.False for a non-computed attribute
      - .assign_ipv6_address_on_creation: planned value cty.False for a non-computed attribute
      - .enable_dns64: planned value cty.False for a non-computed attribute
      - .map_public_ip_on_launch: planned value cty.False for a non-computed attribute
      - .enable_resource_name_dns_a_record_on_launch: planned value cty.False for a non-computed attribute
      - .enable_resource_name_dns_aaaa_record_on_launch: planned value cty.False for a non-computed attribute
2025-02-13T22:10:18.713-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.public_instance, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .user_data: planned value cty.StringVal("5b93819477d9e509cb66cd97d69b836fdfc15ce3") does not match config value cty.StringVal("#!/bin/bash\necho \"Script executed with user_data field.\" > ~/user_data.txt")
      - .vpc_security_group_ids: planned value cty.UnknownVal(cty.Set(cty.String)) does not match config value cty.SetVal([]cty.Value{cty.UnknownVal(cty.String)})
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .capacity_reservation_specification: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .cpu_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .instance_market_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .private_dns_name_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .maintenance_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2025-02-13T22:10:18.719-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/5.84.0/linux_amd64/terraform-provider-aws_v5.84.0_x5 id=5765
2025-02-13T22:10:18.722-0500 [INFO]  backend/local: plan operation completed
2025-02-13T22:12:42.093-0500 [INFO]  Terraform version: 1.10.5
2025-02-13T22:12:42.093-0500 [INFO]  Go runtime version: go1.23.3
2025-02-13T22:12:42.093-0500 [INFO]  CLI args: []string{"terraform", "destroy"}
2025-02-13T22:12:42.095-0500 [INFO]  CLI command args: []string{"destroy"}
2025-02-13T22:12:43.427-0500 [INFO]  backend/local: starting Apply operation
2025-02-13T22:12:43.438-0500 [INFO]  provider: configuring client automatic mTLS
2025-02-13T22:12:43.597-0500 [INFO]  provider.terraform-provider-aws_v5.84.0_x5: configuring server automatic mTLS: timestamp=2025-02-13T22:12:43.597-0500
2025-02-13T22:12:44.255-0500 [ERROR] provider: error encountered while scanning stdout: error="read |0: file already closed"
2025-02-13T22:12:44.255-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/5.84.0/linux_amd64/terraform-provider-aws_v5.84.0_x5 id=5800
2025-02-13T22:12:44.257-0500 [INFO]  provider: configuring client automatic mTLS
2025-02-13T22:12:44.353-0500 [INFO]  provider.terraform-provider-aws_v5.84.0_x5: configuring server automatic mTLS: timestamp=2025-02-13T22:12:44.353-0500
2025-02-13T22:12:44.429-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/5.84.0/linux_amd64/terraform-provider-aws_v5.84.0_x5 id=5808
2025-02-13T22:12:44.429-0500 [INFO]  backend/local: apply calling Plan
2025-02-13T22:12:44.496-0500 [INFO]  backend/local: apply calling Apply
2025-02-13T22:12:50.298-0500 [INFO]  Terraform version: 1.10.5
2025-02-13T22:12:50.299-0500 [INFO]  Go runtime version: go1.23.3
2025-02-13T22:12:50.299-0500 [INFO]  CLI args: []string{"terraform", "state", "ist"}
2025-02-13T22:12:50.300-0500 [INFO]  CLI command args: []string{"state", "ist"}
2025-02-13T22:12:53.694-0500 [INFO]  Terraform version: 1.10.5
2025-02-13T22:12:53.695-0500 [INFO]  Go runtime version: go1.23.3
2025-02-13T22:12:53.695-0500 [INFO]  CLI args: []string{"terraform", "state", "list"}
2025-02-13T22:12:53.695-0500 [INFO]  CLI command args: []string{"state", "list"}
